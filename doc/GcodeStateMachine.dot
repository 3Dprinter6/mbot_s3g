// vim:ai:et:fenc=utf-8:ff=unix:sw=4:ts=4:

digraph
{
  rankdir=TB;

  edge[
  fontsize = 16
  fontcolor = "Red"
  ]

  "IS_G_COMMAND" [shape=diamond];
  "0_UPDATE_SM_POSITION" [shape=rectangle];
  "1_UPDATE_SM_POSITION" [shape=rectangle];
  "92_UPDATE_SM_POSITION" [shape=rectangle];
  "UPDATE_SM_POSITION" [shape=rectangle];
  "4_IS_P_REGISTER_DEFINED?" [shape=rectangle];
  "10_IS_P_REGISTER_DEFINED?" [shape=rectangle];
  "IS_P_REGISTER_DEFINED?" [shape=rectangle];
  "IS_TOOL_ENABLED?" [shape=diamond];
  "IS_A_OR_B_REGISTERS_DEFINED?" [shape=diamond];
  "IS_E_REGISTER_DEFINED?" [shape=diamond];
  "IS_TOOL_ENABLED?" [shape=diamond];
  "WHICH_OFFSET_TO_SET?" [shape=diamond];
  "ARE_OFFSETS_DEFINED?" [shape=diamond];
  "IS_TOOLHEAD_DEFINED?" [shape=diamond];
  "IS_P_REGISTER_A_FLAG?" [shape=diamond];
  "IS_G_COMMAND" -> "CODE=0" [weight=10];
  "IS_G_COMMAND" -> "CODE=1" [weight=10];
  "IS_G_COMMAND" -> "CODE=4" [weight=10];
  "IS_G_COMMAND" -> "CODE=10" [weight=10];
  "IS_G_COMMAND" -> "CODE=54" [weight=10];
  "IS_G_COMMAND" -> "CODE=55" [weight=10];
  "IS_G_COMMAND" -> "CODE=92" [weight=10];
  "IS_G_COMMAND" -> "CODE=161" [weight=10];
  "IS_G_COMMAND" -> "CODE=162" [weight=10];
  "CODE=0" -> "0_UPDATE_SM_POSITION" [label="e"];
  "0_UPDATE_SM_POSITION" -> "RAPID_MOVETO_POSITION" [label="e"];
  "UPDATE_SM_POSITION" -> "IS_TOOLHEAD_DEFINED?" [label="e"];
  "IS_TOOLHEAD_DEFINED?" -> "ARE_OFFSETS_DEFINED?" [label="yes"];
  "IS_TOOLHEAD_DEFINED?" -> "POSITION_SET_RETURN"  [label="no"];
  "ARE_OFFSETS_DEFINED?" -> "APPLY_OFFSETS" [label="yes"];
  "ARE_OFFSETS_DEFINED?" -> "KEYERROR" [label="no"];
  "CODE=1" -> "IS_E_REGISTER_DEFINED?" [label="e"];
  "IS_E_REGISTER_DEFINED?" -> "IS_A_OR_B_REGISTERS_DEFINED?" [label="yes"];
  "IS_A_OR_B_REGISTERS_DEFINED?" -> "THROW_LINEAR_INTERPOLATION_ERROR" [label="yes"];
  "IS_A_OR_B_REGISTERS_DEFINED?" -> "INTERPOLATE_E_POSITION" [label="no"];
  "INTERPOLATE_E_POSITION" -> "1_UPDATE_SM_POSITION" [label="e"];
  "1_UPDATE_SM_POSITION" -> "MOVETO_POSITION" [label="e"];
  "IS_E_REGISTER_DEFINED?" -> "1_UPDATE_SM_POSITION" [label="no"];
  "CODE=4" -> "4_IS_P_REGISTER_DEFINED?" [label="e"];
  "4_IS_P_REGISTER_DEFINED?" -> "IS_TOOL_ENABLED?" [label="e"];
  "IS_P_REGISTER_DEFINED?" -> "MISSING_REGISTER_ERROR" [label="no"];
  "IS_P_REGISTER_DEFINED?" -> "IS_P_REGISTER_A_FLAG?" [label="yes"];
  "IS_P_REGISTER_A_FLAG?" -> "INVALID_REGISTER_ERROR" [label="yes"];
  "IS_P_REGISTER_A_FLAG?" -> "P_REGISTER_CHECK_RETURN" [label="no"];
  "IS_TOOL_ENABLED?" -> "DELAY" [label="disabled"];
  "IS_TOOL_ENABLED?" -> "SIT_AND_EXTRUDE" [label="enabled"];
  "CODE=10" -> "10_IS_P_REGISTER_DEFINED?" [label="e"];
  "10_IS_P_REGISTER_DEFINED?" -> "WHICH_OFFSET_TO_SET?" [label="e"];
  "WHICH_OFFSET_TO_SET?" -> "SET_TOOL_0_OFFSET" [label="P=0"];
  "WHICH_OFFSET_TO_SET?" -> "SET_TOOL_1_OFFSET" [label="P=1"];
  "CODE=54" -> "TOOL=0" [label="e"];
  "CODE=55" -> "TOOL=1" [label="e"];
  "CODE=92" -> "92_UPDATE_SM_POSITION" [label="e"];
  "92_UPDATE_SM_POSITION" -> "SET_POSITION" [label="e"];
  "CODE=161" -> "FIND_AXES_MINIMUMS" [label="e"];
  "FIND_AXES_MINIMUMS" -> "LOSE_POSITION" [label="e"];
  "CODE=162" -> "FIND_AXES_MAXIMUMS" [label="e"];
  "FIND_AXES_MAXIMUMS" -> "LOSE_POSITION";
}



